version: 2.1

executors:
  aws:
    docker:
      - image: amazon/aws-cli
  python:
    docker:
      - image: python:3.7-alpine3.11
    
commands:
  destroy-environment:
    description: Destroy backend. Only used for development of pipeline, in productive pipeline use the backend should not be destroyed.
    parameters:
      when:
        type: string  
    steps:
      - run:
          name: Destroy environment
          command: |
            aws cloudformation delete-stack --stack-name udapeople-project-5-backend
          when: << parameters.when >>

jobs:
  create-backend:
    executor: aws
    steps:
      - checkout
      - run:
          name: Create backend
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/k8s.yml \
              --tags project=udacityProject5 \
              --stack-name "udapeople-project-5-backend" 
      - run:
          name: Export ec2 URL to memstash
          command: |
            EC2URL=$(aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicDnsName' \
              --filters "Name=tag:project,Values=udacityProject5" \
              --output text)
            curl -H "Content-Type: text/plain" \
              -H "token: ${MEMSTASH_TOKEN}" \
              --request PUT --data $EC2URL \
              https://api.memstash.io/values/EC2URL-Project-Philipp 
      - destroy-environment:
          when: on_fail

  configure-backend:
    executor: python
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["49:d0:10:4c:a7:87:12:89:ad:bf:6d:42:bf:0c:17:53"]
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible 
            apk add --update curl
            pip install awscli
      - run:
          name: Add URL to inventory file
          command: |
            URL=$(curl -H "Content-Type: text/plain" \
              -H "token: ${MEMSTASH_TOKEN}" \
              --request GET \
              https://api.memstash.io/values/EC2URL-Project-Philipp) 
            echo $URL >> .circleci/ansible/inventory.txt
            cat .circleci/ansible/inventory.txt
      - run:
          name: Configure server
          working_directory: ./.circleci/ansible
          command: |
            cat inventory.txt
            ansible-playbook -vvv -i inventory.txt \
              configure-server.yml 
      - destroy-environment:
          when: on_fail

  lint-app:
    executor: python
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            apk add --update make
            apk add --update gcc
            apk add --update musl-dev
      - run:
          name: setup env
          command: |
            make setup
            source ~/.project5/bin/activate
      - run:
          name: installing requirements and linting
          command: |
            make all

  create-and-upload-docker-image:
    machine: true
    steps:
      - checkout
      - run:
          name: build
          command: |
            docker build --tag=phlppsdr/capstone:${CIRCLE_WORKFLOW_ID} .
            docket tag phlppsdr/capstone:${CIRCLE_WORKFLOW_ID} phlppsdr/capstone:latest
            docker login -u $DOCKER_USERNAME -p $DOCKER_TOKEN 
            docker push phlppsdr/capstone:${CIRCLE_WORKFLOW_ID}
            docker push phlppsdr/capstone:latest

  deploy-app:
    executor: python
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["49:d0:10:4c:a7:87:12:89:ad:bf:6d:42:bf:0c:17:53"]
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible 
            apk add --update curl
            pip install awscli
      - run:
          name: Add URL to inventory file
          command: |
            URL=$(curl -H "Content-Type: text/plain" \
              -H "token: ${MEMSTASH_TOKEN}" \
              --request GET \
              https://api.memstash.io/values/EC2URL-Project-Philipp) 
            echo $URL >> .circleci/ansible/inventory.txt
            cat .circleci/ansible/inventory.txt
      - run:
          name: Deploy app
          working_directory: ./.circleci/ansible
          command: |
            cat inventory.txt
            ansible-playbook -vvv -i inventory.txt \
              deploy-app.yml 
      - destroy-environment:
          when: on_fail

  smoke-test:
    executor: python 
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apk add --update curl
            pip install awscli
      - run:
          name: smoke test
          command: |
            APPLICATIONURL=$(curl -H "Content-Type: text/plain" \
              -H "token: ${MEMSTASH_TOKEN}" \
              --request GET \
              https://api.memstash.io/values/EC2URL-Project-Philipp)
            APPLICATIONENDPOINT="${APPLICATIONURL}:30000"
            if curl -s ${APPLICATIONENDPOINT} | grep "Philipp SÃ¶der"
            then
              return 0
            else
              return 1
            fi
      - destroy-environment:
          when: on_fail

workflows:
  default:
    jobs:
      - lint-app
      - create-and-upload-docker-image:
          requires: [lint-app]
          filters:
            branches:
              only: [master]
      - create-backend:
          filters:
            branches:
              only: [master]
      - configure-backend:
          requires: [create-backend]
          filters:
            branches:
              only: [master]
      - deploy-app:
          requires: 
            - create-and-upload-docker-image
            - configure-backend
          filters:
            branches:
              only: [master]
      - smoke-test:
          requires: [deploy-app]
          filters:
            branches:
              only: [master]